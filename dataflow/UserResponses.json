{
	"name": "UserResponses",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "responses_SQL",
						"type": "DatasetReference"
					},
					"name": "response"
				},
				{
					"dataset": {
						"referenceName": "users_SQL",
						"type": "DatasetReference"
					},
					"name": "users"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "UserResponse",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "join1"
				},
				{
					"name": "select1"
				},
				{
					"name": "cast1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ID as decimal(38,18),",
				"          QuestionID as decimal(38,18),",
				"          answer as string,",
				"          UserID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> response",
				"source(output(",
				"          {_id} as string,",
				"          name as string,",
				"          emailId as string,",
				"          password as string,",
				"          role as string,",
				"          designation as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: true,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> users",
				"response, users join(UserID == {_id},",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 select(mapColumn(",
				"          UserID,",
				"          name,",
				"          QuestionID,",
				"          answer",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 cast(output(",
				"          QuestionID as decimal(10,0)",
				"     ),",
				"     errors: true) ~> cast1",
				"cast1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
			]
		}
	}
}